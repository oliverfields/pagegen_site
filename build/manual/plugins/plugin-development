<!DOCTYPE html><html lang=en> <head><meta charset=UTF-8><meta http-equiv=X-UA-Compatible content="IE=edge"><meta name=viewport content="width=device-width, initial-scale=1.0"><base href=https://pagegen.phnd.net><link rel=canonical href=https://pagegen.phnd.net/manual/plugins/plugin-development><title>Plugin development</title><meta name=description content="Brief guide to developing Pagegen plugins."><meta name=copyright content="Copyright ¬© 2025"><meta property=og:image content=https://pagegen.phnd.net/assets/theme/hero.png><meta property=og:image:secure_url content=https://pagegen.phnd.net/assets/theme/hero.png><meta property=og:image:width content=1200><meta property=og:image:height content=630><meta property=og:image:alt content=Pagegen><meta property=og:image:type content=image/png><meta property=og:site_name content=pagegen.phnd.net><meta property=og:title content="Plugin development"><meta property=og:url content=https://pagegen.phnd.net/manual/plugins/plugin-development><meta property=og:type content=website><meta property=og:description content="Brief guide to developing Pagegen plugins."><meta name=description content="Brief guide to developing Pagegen plugins."><link rel=alternate type=application/rss+xml title="Pagegen static site generator" href=/feed.rss><meta name=Generator content=Pagegen><link rel="shortcut icon" href=/theme/favicon.ico type=image/x-icon><link rel=stylesheet href=/theme/site.css type=text/css><script async defer src=https://buttons.github.io/buttons.js></script></head> <body> <div id=content> <article> <h1>Plugin development</h1> <p>Pagegens plugin architecture is straight forward. During site generation Pagegen makes hooks available for plugins to trigger the appropriate plugin functions(def).</p> <h2>Hooks</h2> <p>The available hooks are as follows.</p> <table> <thead> <tr> <th>Hook</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>hook_pre_build</td> <td>Before site generation starts</td> </tr> <tr> <td>hook_pre_build_lists</td> <td>Before build list is generated, the build list is the list of files that need to be built</td> </tr> <tr> <td>hook_page_*</td> <td>Page hooks, run per page that is generated, see table below</td> </tr> <tr> <td>hook_post_build_lists</td> <td>After build list is populated with pages to be buildt</td> </tr> <tr> <td>hook_post_build</td> <td>After site generation</td> </tr> </tbody> </table> <p>Page hooks are run for each page that is registered in the build list.</p> <table> <thead> <tr> <th>Hook</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>hook_page_deps</td> <td>After page dependencies have been identified</td> </tr> <tr> <td>hook_page_pre_build</td> <td>Before page is built</td> </tr> <tr> <td>hook_page_render</td> <td>Render page.content to page.out</td> </tr> <tr> <td>hook_page_post_build</td> <td>After page has been buildt/rendered</td> </tr> </tbody> </table> <h2>Hook objects</h2> <p>When a plugin function is called it is passed a list of objects that are relevant for that particular hook. The site object is always made available and mostly the page object also.</p> <p>From the <code>site</code> object typical things the following attributes are highlighted.</p> <table> <thead> <tr> <th>Name</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>site.build_dir</td> <td>Build directory</td> </tr> <tr> <td>site.conf</td> <td>Configuration</td> </tr> <tr> <td>site.content_dir</td> <td>Content directory</td> </tr> <tr> <td>site.index</td> <td>List of all pages meta data, including headers</td> </tr> <tr> <td>site.site_dir</td> <td>Root site directory</td> </tr> </tbody> </table> <p>From the <code>page</code> object typical things the following attributes are highlighted.</p> <table> <thead> <tr> <th>Name</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>page.absolute_url</td> <td>Full url to page (canonical)</td> </tr> <tr> <td>page.content</td> <td>Page content without headers/frontmatter</td> </tr> <tr> <td>page.headers</td> <td>Dictionary of headers set in page</td> </tr> <tr> <td>page.out</td> <td>Final output written to <code>build</code> directory</td> </tr> <tr> <td>page.raw</td> <td>Page content as read from disk</td> </tr> <tr> <td>page.relative_url</td> <td>URL relative to site root</td> </tr> <tr> <td>page.source_path</td> <td>Page source file path</td> </tr> <tr> <td>page.target_path</td> <td>Where final output(page.out) will be saved</td> </tr> </tbody> </table> <h2>Example plugin</h2> <p>The following plugin creates extracts an excerpt from a page during rendering. The objects argument contains two objects, site and page.</p> <pre><code>class Plugin():

    def hook_page_render(self, objects):

        p = objects['page']

        print(p.relative_url)
</code></pre> <p>To test this out do the following:</p> <ol> <li>Add the code above to <code>&lt;site dir&gt;/plugins/test/test.py</code></li> <li>Enable the plugin in <code>site.conf</code> section <code>[site]</code> by adding setting <code>enabled_plugins=test</code>, alternatively appending <code>, test</code> if the setting exists</li> <li>Make sure there are some pages and run <code>pgn -gV</code> to see what is going on</li> </ol> <p>The function/def name <code>def hook_page_render</code> can be any of the hooks specified above.</p> <p>To get a better understanding of how plugins are written please take a look at the <a href=https://github.com/oliverfields/pagegen/tree/master/src/pagegen/plugins>plugins included with Pagegen</a>.</p> </article> <footer>Copyright &#169; 2025</footer> </div><!-- /content --> <div id=menu> <header> <a href=/index> <img width=120 height=66 src=/theme/pgn-logo.svg> </a> <h2>Every page is a file</h2> <em>Static site generator</em> </header> <!--
      <div id="search-form">
        <form action="https://pagegen.phnd.net/search-results" method="GET">
          <input type="text" id="search-query" name="q" />
          <input type="submit" id="search-submit" value="üîçÔ∏è" />
        </form>
      </div> --><!-- /search-form --> <menu id=site-menu><li><a href=/quick-start>Quick start</a></li> <li><span class=toggle-expand>Manual <span>‚ñº</span></span> <ol> <li><a href=/manual/site>Site</a></li> <li><a href=/manual/pages>Pages</a></li> <li><span class=toggle-expand>Plugins <span>‚ñº</span></span> <ol> <li><a href=/manual/plugins/included-plugins>Included</a></li> <li><a href=/manual/plugins/plugin-installation>Installation</a></li> <li><a href=/manual/plugins/plugin-development>Development</a></li></ol> </li></ol> </li> <li><span class=toggle-expand>Articles <span>‚ñº</span></span> <ol> <li><a href=/articles/git-deployment-example>Git deployment example</a></li> <li><a href=/articles/apache-and-nginx-setup-tips>Apache and Nginx setup tips</a></li> <li><a href=/articles/pagegen-vim-plugin>Pagegen Vim plugin</a></li></ol> </li></menu> <script>
function show_current_page_parent_menus(obj){
  if (typeof obj === 'undefined') return;
  if (obj.id == 'site-menu') return;
  if (obj.parentElement.tagName == 'OL') {
    obj.parentElement.style.display='block';
    obj.parentElement.parentElement.children[0].children[0].innerHTML = '‚ñ≤';
  }
  show_current_page_parent_menus(obj.parentElement);
}

let m = document.getElementById('site-menu');

// Add click event to toggle sub menus
let showHideLinks = m.getElementsByClassName('toggle-expand');
for (let i = 0; i < showHideLinks.length; i++) {

  showHideLinks[i].addEventListener("click", function() {
    for (const child of this.parentElement.children) {
      if (child.tagName == 'OL')¬†{
        if (child.style.display == 'block') {
          this.children[0].innerHTML = '‚ñº';
          child.style.display = 'none';
        }
        else {
          this.children[0].innerHTML = '‚ñ≤';
          child.style.display = 'block';
        }
      }
    }
  });
}

// Show current page
page_url = window.location.pathname;
let menuLinks = m.getElementsByTagName('A');
for (let i = 0; i < menuLinks.length; i++) {
  if ('/' + menuLinks[i].href.split('/').slice(3).join('/') == page_url) {
    show_current_page_parent_menus(menuLinks[i]);
  }
}
</script> </body> </html> <ol> <li>‚úâÔ∏è <a href=mailto:pagegen@phnd.net>pagegen@phnd.net</a></li> <li>üêû <a href=https://github.com/oliverfields/pagegen_site/issues>Issue tracker</a></li> </ol> <div class=github-button-container><a class=github-button href=https://github.com/oliverfields/pagegen data-show-count=true data-size=large aria-label="Star oliverfields/pagegen on GitHub">Star</a></div> </div><!-- /menu --> <div id=menu-toggle> <svg id=menu-open width=2rem height=2rem viewbox="0 0 24 24" fill=none xmlns=http://www.w3.org/2000/svg> <path fill=#1F2328 d="M5 6.5H19V8H5V6.5Z"/> <path fill=#1F2328 d="M5 16.5H19V18H5V16.5Z"/> <path fill=#1F2328 d="M5 11.5H19V13H5V11.5Z"/> </svg> <svg id=menu-close style="display: none;" width=2rem height=2rem viewbox="0 0 24 24" fill=none xmlns=http://www.w3.org/2000/svg> <path fill-rule=evenodd clip-rule=evenodd fill=#1F2328 d="M12 10.9394L16.9697 5.96961L18.0304 7.03027L13.0606 12L18.0303 16.9697L16.9697 18.0304L12 13.0607L7.03045 18.0302L5.96979 16.9696L10.9393 12L5.96973 7.03042L7.03039 5.96976L12 10.9394Z"/> </svg> </div><!-- /menu-toggle --> <script src=/theme/site.js></script> </body> </html> 