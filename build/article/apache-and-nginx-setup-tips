<!DOCTYPE html><html lang=en> <head><meta charset=UTF-8><meta http-equiv=X-UA-Compatible content="IE=edge"><meta name=viewport content="width=device-width, initial-scale=1.0"><base href=http://localhost:8000><link rel=canonical href=http://localhost:8000/article/apache-and-nginx-setup-tips><title>Apache and nginx setup tips</title><meta name=description content="Pagegen user experience and SEO may be increased by configuring the web server appropriately."><meta name=copyright content="Copyright ¬© 2025"><meta property=og:image content=http://localhost:8000/assets/theme/hero.png><meta property=og:image:secure_url content=http://localhost:8000/assets/theme/hero.png><meta property=og:image:width content=1200><meta property=og:image:height content=630><meta property=og:image:alt content=Pagegen><meta property=og:image:type content=image/png><meta property=og:site_name content=pagegen.phnd.net><meta property=og:title content="Apache and nginx setup tips"><meta property=og:url content=http://localhost:8000/article/apache-and-nginx-setup-tips><meta property=og:type content=website><meta property=og:description content="Pagegen user experience and SEO may be increased by configuring the web server appropriately."><meta name=description content="Pagegen user experience and SEO may be increased by configuring the web server appropriately."><link rel=alternate type=application/rss+xml title="Pagegen static site generator" href=/feed.rss><meta name=Generator content=Pagegen><link rel="shortcut icon" href=/theme/favicon.ico type=image/x-icon><link rel=stylesheet href=/theme/site.css type=text/css><script async defer src=https://buttons.github.io/buttons.js></script></head> <body> <div id=content> <article> <h1>Apache and nginx setup tips</h1> <p>All necessary files for a freshly generated site are found in the <code>build</code> directory. To publish the site, this directory must be uploaded to the web server. The site will work out of the box if sane settings are used, but a little configuration of the web server can make the site more friendly to humans and crawlers.</p> <div class="admonition note"> <p class=admonition-title>Note</p> <p>All links generated by Pagegen are by default relative and assume the site is located directly on the web root folder (e.g. http://mysite.com/). If the site is to be in any other location the <code>base_url</code> setting in <code>site.conf</code> must be set.</p> </div> <div class="admonition note"> <p class=admonition-title>Note</p> <p>If using Apache the .htaccess file can be saved as a normal page in the <code>content directory</code>. Most likely the headers should be: <code>Render: False</code>.</p> </div> <p>The following settings may be set in different configuration files depending on the web server setup, exactly where to put them is outside the scope of this article, but with the setting names and Google you should be on your way.</p> <h2>Nice URLs</h2> <p>File name extensions are optional to Pagegen, however if they are not used the web server must be configured to serve extensionless files with the correct mime type.</p> <p>The configuration below tells the web server to set the HTTP <em>Content-Type</em> header to <em>text/html</em> for all files, except if the file has an extension, in which case use default mime type.</p> <h3>Apache</h3> <pre><code> # Force text/html for all files
&lt;FilesMatch "\.*"&gt;
  ForceType text/html
&lt;/FilesMatch&gt;

# Use default type for files that have an extension
&lt;FilesMatch "\.[a-zA-Z0-9]{1,4}$"&gt;
  ForceType none
&lt;/FilesMatch&gt;
</code></pre> <h3>Nginx</h3> <pre><code>default_type text/html;
</code></pre> <h2>Serve default file</h2> <p>If no file specified in request, as happens when accessing a directory on the web site, it is nice if the web server returns a default file, instead of a directory listing (which can be the default).</p> <p>Content files for directories are <code>index</code> (with optional extension), the web server should serve the <code>index</code> file when the user requests a directory.</p> <h3>Apache</h3> <pre><code>DirectoryIndex index.html
</code></pre> <h3>Nginx</h3> <pre><code>index index.html;
</code></pre> <h2>Custom error pages</h2> <p>On an error web servers can be configured to serve custom error pages (e.g a 404 if a file was not found). Error pages content can be handled by Pagegen if required, but the web server needs to be told where to find them. Error pages for the following types could be a fair starting point.</p> <ul> <li>403 - Access forbidden</li> <li>404 - Page not found</li> <li>500 - Internal server error</li> </ul> <p>Create the following files with appropriate content.</p> <ul> <li>content/403.html</li> <li>content/404.html</li> <li>content/500.html</li> </ul> <h3>Example 404 page</h3> <pre><code>Render: False

Sorry, couldn't find that page:(
</code></pre> <h3>Apache</h3> <pre><code>ErrorDocument 403 /403.html
ErrorDocument 404 /404.html
ErrorDocument 500 /500.html
</code></pre> <h3>Nginx</h3> <pre><code>error_page 403 /403.html;
error_page 404 /404.html;
error_page 500 /500.html;
</code></pre> <h2>Serve compressed content</h2> <p>For performance content suitable for compression (e.g. text, not images) should be gzipped. Consider also doing this with a hook script, to save the web server gzipping every file it sends.</p> <h3>Apache</h3> <pre><code>SetOutputFilter DEFLATE
AddOutputFilterByType DEFLATE text/plain text/html application/javascript text/javascript application/x-javascript text/css
</code></pre> <h3>Nginx</h3> <pre><code>gzip on;
gzip_types text/plain text/html application/javascript text/javascript application/x-javascript text/css;
</code></pre> </article> <footer>Copyright &#169; 2025</footer> </div><!-- /content --> <div id=menu> <header> <a href=/index> <img width=120 height=66 src=/theme/pgn-logo.svg> </a> <h2>Every page is a file</h2> <em>Static site generator</em> </header> <!--
      <div id="search-form">
        <form action="http://localhost:8000/search-results" method="GET">
          <input type="text" id="search-query" name="q" />
          <input type="submit" id="search-submit" value="üîçÔ∏è" />
        </form>
      </div> --><!-- /search-form --> <menu id=site-menu><li><a href=/quick-start>Quick start</a></li> <li><span class=toggle-expand>Manual <span>‚ñº</span></span> <ol> <li><a href=/manual/site>Site</a></li> <li><a href=/manual/pages>Pages</a></li> <li><span class=toggle-expand>Plugins <span>‚ñº</span></span> <ol> <li><a href=/manual/plugins/included-plugins>Included</a></li> <li><a href=/manual/plugins/plugin-installation>Installation</a></li> <li><a href=/manual/plugins/plugin-development>Development</a></li></ol> </li></ol> </li> <li><span class=toggle-expand>Articles <span>‚ñº</span></span> <ol> <li><a href=/article/git-deployment-example>Git deployment example</a></li> <li><a href=/article/apache-and-nginx-setup-tips>Apache and Nginx setup tips</a></li> <li><a href=/article/pagegen-vim-plugin>Pagegen vim plugin</a></li> <li><a href=/article/deploying-to-github-pages>Deploying to github pages</a></li></ol> </li></menu> <script>
function show_current_page_parent_menus(obj){
  if (typeof obj === 'undefined') return;
  if (obj.id == 'site-menu') return;
  if (obj.parentElement.tagName == 'OL') {
    obj.parentElement.style.display='block';
  }
  show_current_page_parent_menus(obj.parentElement);
}

let m = document.getElementById('site-menu');

// Add click event to toggle sub menus
let showHideLinks = m.getElementsByClassName('toggle-expand');
for (let i = 0; i < showHideLinks.length; i++) {
  showHideLinks[i].addEventListener("click", function() {
    for (const child of this.parentElement.children) {
      if (child.tagName == 'OL')¬†{
        if (child.style.display == 'block') {
          this.children[0].innerHTML = '‚ñº';
          child.style.display = 'none';
        }
        else {
          this.children[0].innerHTML = '‚ñ≤';
          child.style.display = 'block';
        }
      }
    }
  });
}

// Show current page
page_url = window.location.pathname;
let menuLinks = m.getElementsByTagName('A');
for (let i = 0; i < menuLinks.length; i++) {
  if ('/' + menuLinks[i].href.split('/').slice(3).join('/') == page_url) {
    show_current_page_parent_menus(menuLinks[i]);
  }
}
</script> </body> </html> <ol> <li>‚úâÔ∏è <a href=mailto:pagegen@phnd.net>pagegen@phnd.net</a></li> <li>üêû <a href=https://github.com/oliverfields/pagegen_site/issues>Issue tracker</a></li> </ol> <div class=github-button-container><a class=github-button href=https://github.com/oliverfields/pagegen data-show-count=true data-size=large aria-label="Star oliverfields/pagegen on GitHub">Star</a></div> </div><!-- /menu --> <div id=menu-toggle> <svg id=menu-open width=2rem height=2rem viewbox="0 0 24 24" fill=none xmlns=http://www.w3.org/2000/svg> <path fill=#1F2328 d="M5 6.5H19V8H5V6.5Z"/> <path fill=#1F2328 d="M5 16.5H19V18H5V16.5Z"/> <path fill=#1F2328 d="M5 11.5H19V13H5V11.5Z"/> </svg> <svg id=menu-close style="display: none;" width=2rem height=2rem viewbox="0 0 24 24" fill=none xmlns=http://www.w3.org/2000/svg> <path fill-rule=evenodd clip-rule=evenodd fill=#1F2328 d="M12 10.9394L16.9697 5.96961L18.0304 7.03027L13.0606 12L18.0303 16.9697L16.9697 18.0304L12 13.0607L7.03045 18.0302L5.96979 16.9696L10.9393 12L5.96973 7.03042L7.03039 5.96976L12 10.9394Z"/> </svg> </div><!-- /menu-toggle --> <script src=/theme/site.js></script> </body> </html> <script>// Pagegen live reload trigger

var sleep = time => new Promise(resolve => setTimeout(resolve, time))
var poll = (promiseFn, time) => promiseFn().then(
  sleep(time).then(() => poll(promiseFn, time))
)

var page_loaded_at = new Date();
var url = 'http://localhost:8000/pagegen_site_hash';
console.log(url)
var poll_intervall = 1000 // ms

poll(() => new Promise(() => {
  var http = new XMLHttpRequest();
  http.open('HEAD', url);
  http.onreadystatechange = function() {
    if (this.readyState == this.DONE) {
      var last_modified = new Date(this.getResponseHeader("Last-Modified"));
      console.log(url + ' modified ' + last_modified);
      if (last_modified > page_loaded_at) {
        window.location.reload();
      }
    }
  };
  http.send();
}), poll_intervall)
</script>