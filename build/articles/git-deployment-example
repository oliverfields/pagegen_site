<!DOCTYPE html><html lang=en> <head><meta charset=UTF-8><meta http-equiv=X-UA-Compatible content="IE=edge"><meta name=viewport content="width=device-width, initial-scale=1.0"><base href=https://pagegen.phnd.net><link rel=canonical href=https://pagegen.phnd.net/articles/git-deployment-example><title>Git deployment example</title><meta name=description content="Push changes to remote server and trigger git hooks to deploy web site."><meta name=copyright content="Copyright ¬© 2025"><meta property=og:image content=https://pagegen.phnd.net/assets/theme/hero.png><meta property=og:image:secure_url content=https://pagegen.phnd.net/assets/theme/hero.png><meta property=og:image:width content=1200><meta property=og:image:height content=630><meta property=og:image:alt content=Pagegen><meta property=og:image:type content=image/png><meta property=og:site_name content=pagegen.phnd.net><meta property=og:title content="Git deployment example"><meta property=og:url content=https://pagegen.phnd.net/articles/git-deployment-example><meta property=og:type content=website><meta property=og:description content="Push changes to remote server and trigger git hooks to deploy web site."><meta name=description content="Push changes to remote server and trigger git hooks to deploy web site."><link rel=alternate type=application/rss+xml title="Pagegen static site generator" href=/feed.rss><meta name=Generator content=Pagegen><link rel="shortcut icon" href=/theme/favicon.ico type=image/x-icon><link rel=stylesheet href=/theme/site.css type=text/css><script async defer src=https://buttons.github.io/buttons.js></script></head> <body> <div id=content> <article> <h1>Git deployment example</h1> <p>A possible approach to building and deploying static sites is outlined below. It can be a viable solution given the following conditions are true.</p> <ul> <li>Git repo for development</li> <li>SSH access to web server</li> <li>Git repo on web server</li> </ul> <p>A workflow can be setup such that day to day development happens on the dev repo, then when ready to deploy new version of site on web server, a git push is made to the web server repo triggering a git hook that builds and updates the site.</p> <h2>Web repo</h2> <p>The <code>webrepo</code> will be a bare repository that when receiving a push will run a hook to build and update the website. For our purposes it will be located on the web server itself and we need SSH access to this server.</p> <p>A bare repository is typically used for pulling and pushing to, it does not have a Working Tree, which is directory containing the files you edit.</p> <h2>Setup bare repo and build pipeline on web server</h2> <p>Lets setup the <code>webrepo</code>, we need to do this on the web server.</p> <pre><code>$ ssh me@mywebserver.com
$ mkdir webrepo
$ cd webrepo
$ git --bare init
</code></pre> <p>Also create a directory for building the site.</p> <pre><code>$ mkdir build
</code></pre> <p>Install pagegen on the web server.</p> <pre><code>$ pip install pagegen
</code></pre> <p>We will now setup a git hook that gets triggered every time the <code>webrepo</code> receives a push. Git hooks are simply scripts that are run when certain events happen, in our case we will use the <code>post-receive</code> hook.</p> <p>Create the <code>webrepo/hooks/post-receive</code> with the following content.</p> <pre><code>#!/bin/bash

# Ensure this is same as the build directory created above
build_dir="/home/me/build"

echo "Git checkout.."
GIT_WORK_TREE="$build_dir" git checkout -f master

echo "Building.."
cd "$build_dir"
# Ensure this path is correct
"$HOME/.local/bin/pgn" --generate
</code></pre> <p>Ensure the hook is executable.</p> <pre><code>$ chmod u+x webrepo/hooks/post-receive
</code></pre> <p>Lets assume the web server is setup to serve <code>www</code> directory. We now want to make <code>www</code> a symlink that points to the <code>build/site/production</code> directory, because that is where the our freshly built site will be found.</p> <pre><code>ln -s "$HOME/build" "$HOME/www"
</code></pre> <p>To recap we have now setup the following.</p> <pre><code>‚îú‚îÄ‚îÄ build # Pagegen will build site here
‚îú‚îÄ‚îÄ webrepo
‚îÇ   ‚îî‚îÄ‚îÄ hooks
‚îÇ       ‚îî‚îÄ‚îÄ post-receive # Script run on push to trigger pagegen build
‚îî‚îÄ‚îÄ www -&gt; /tmp/t/build # Symlink to site, this is what the webserver serves
</code></pre> <h2>Dev repo</h2> <p>This git repo can be anywhere, e.g. github, local or whatever. Use this repo in day to day development. If you don't have one already you can setup one on your local machine like so. We will refer to it as <code>devrepo</code>.</p> <pre><code>$ mkdir devrepo
$ cd devrepo
$ git init
</code></pre> <p>To enable pushing changes from the <code>devrepo</code> to the <code>webrepo</code> we need to configure a git remote. A git repo may have multiple remotes. Lets assume you setup your <code>devrepo</code> with github, the following will list the github remote, make sure you run it from the <code>devrepo</code> directory.</p> <pre><code>$ git remote
origin
</code></pre> <p>By convention <code>origin</code> is the name of the remote repository that the project was originally cloned from.</p> <p>To see more detail run the command again with argument <code>-v</code>.</p> <pre><code>$ git remote -v
</code></pre> <p>We want to add <code>webrepo</code> as a new remote to <code>devrepo</code>, we can call the remote what we want, but will just unimaginatively call it <code>web</code> for now.</p> <pre><code>$ git remote add web me@mywebserver.com:~/webrepo
</code></pre> <p>Now we can commit, push and pull and generally use <code>devrepo</code> as usual, but when we are ready to update the live site we can simply commit all changes and push to <code>webreop</code>.</p> <pre><code>$ git push web
</code></pre> <p>The push will send all changes to <code>webrepo</code> and trigger our hook to check out the new changes in the <code>build</code> directory, run <code>pgn --generate</code> building the new site effectively making it available to serve through the <code>www</code> symlink.</p> </article> <footer>Copyright &#169; 2025</footer> </div><!-- /content --> <div id=menu> <header> <a href=/index> <img width=120 height=66 src=/theme/pgn-logo.svg> </a> <h2>Every page is a file</h2> <em>Static site generator</em> </header> <div id=search-form> <form action=https://pagegen.phnd.net/search method=GET> <input type=text id=search-query name=q> <input type=submit id=search-submit value=üîçÔ∏è> </form> </div><!-- /search-form --> <menu id=site-menu><li><a href=/quick-start>Quick start</a></li> <li><span class=toggle-expand>Manual <span>‚ñº</span></span> <ol> <li><a href=/manual/site>Site</a></li> <li><a href=/manual/pages>Pages</a></li> <li><span class=toggle-expand>Plugins <span>‚ñº</span></span> <ol> <li><a href=/manual/plugins/included-plugins>Included</a></li> <li><a href=/manual/plugins/plugin-installation>Installation</a></li> <li><a href=/manual/plugins/plugin-development>Development</a></li></ol> </li></ol> </li> <li><span class=toggle-expand>Articles <span>‚ñº</span></span> <ol> <li><a href=/articles/git-deployment-example>Git deployment example</a></li> <li><a href=/articles/apache-and-nginx-setup-tips>Apache and Nginx setup tips</a></li> <li><a href=/articles/pagegen-vim-plugin>Pagegen Vim plugin</a></li></ol> </li></menu> <script>
function show_current_page_parent_menus(obj){
  if (typeof obj === 'undefined') return;
  if (obj.id == 'site-menu') return;
  if (obj.parentElement.tagName == 'OL') {
    obj.parentElement.style.display='block';
    obj.parentElement.parentElement.children[0].children[0].innerHTML = '‚ñ≤';
  }
  show_current_page_parent_menus(obj.parentElement);
}

let m = document.getElementById('site-menu');

// Add click event to toggle sub menus
let showHideLinks = m.getElementsByClassName('toggle-expand');
for (let i = 0; i < showHideLinks.length; i++) {

  showHideLinks[i].addEventListener("click", function() {
    for (const child of this.parentElement.children) {
      if (child.tagName == 'OL')¬†{
        if (child.style.display == 'block') {
          this.children[0].innerHTML = '‚ñº';
          child.style.display = 'none';
        }
        else {
          this.children[0].innerHTML = '‚ñ≤';
          child.style.display = 'block';
        }
      }
    }
  });
}

// Show current page
page_url = window.location.pathname;
let menuLinks = m.getElementsByTagName('A');
for (let i = 0; i < menuLinks.length; i++) {
  if ('/' + menuLinks[i].href.split('/').slice(3).join('/') == page_url) {
    show_current_page_parent_menus(menuLinks[i]);
  }
}
</script> </body> </html> <ol> <li>‚úâÔ∏è <a href=mailto:pagegen@phnd.net>pagegen@phnd.net</a></li> <li>üêû <a href=https://github.com/oliverfields/pagegen_site/issues>Issue tracker</a></li> </ol> <div class=github-button-container><a class=github-button href=https://github.com/oliverfields/pagegen data-show-count=true data-size=large aria-label="Star oliverfields/pagegen on GitHub">Star</a></div> </div><!-- /menu --> <div id=menu-toggle> <svg id=menu-open width=2rem height=2rem viewbox="0 0 24 24" fill=none xmlns=http://www.w3.org/2000/svg> <path fill=#1F2328 d="M5 6.5H19V8H5V6.5Z"/> <path fill=#1F2328 d="M5 16.5H19V18H5V16.5Z"/> <path fill=#1F2328 d="M5 11.5H19V13H5V11.5Z"/> </svg> <svg id=menu-close style="display: none;" width=2rem height=2rem viewbox="0 0 24 24" fill=none xmlns=http://www.w3.org/2000/svg> <path fill-rule=evenodd clip-rule=evenodd fill=#1F2328 d="M12 10.9394L16.9697 5.96961L18.0304 7.03027L13.0606 12L18.0303 16.9697L16.9697 18.0304L12 13.0607L7.03045 18.0302L5.96979 16.9696L10.9393 12L5.96973 7.03042L7.03039 5.96976L12 10.9394Z"/> </svg> </div><!-- /menu-toggle --> <script src=/theme/site.js></script> </body> </html> 