#!/bin/bash

set -e

env="$1"

####################################################
# Settings                                         #
####################################################

pagegen='/home/oliver/Personal/projects/pagegen/v2/pagegen'
pg_dir='/home/oliver/Personal/projects/pagegen/pg_site'
deploy_assets_dir="$pg_dir/deploy_assets"
aspell_personal_dictionary="$deploy_assets_dir/aspell-pagegen-dictionary.txt"
content_dir="$pg_dir/content"
prod_url="http://pagegen.phnd.net"
stage_url="http://pgstage.phnd.net"
env_dir="$pg_dir/environments/$env"
site_dir="$env_dir/site"
master_page_template="$pg_dir/templates/master_page.tpl"
page_template="$pg_dir/templates/page.tpl"


####################################################
# Quick sanity check                               #
####################################################

if [ "$env" = "test" ] || [ "$env" = "stage" ] || [ "$env" = "prod" ]; then
  :
else
  echo "Unknown environment '$env', must be test, stage or prod"
  exit 1
fi

if [ ! -e "$env_dir" ]; then
  echo "Not found '$env_dir'"
  exit 1
fi


####################################################
# Setup pagetemplate for environment               #
####################################################

# Trawl template and replace placeholders as apropriate
{
  while read line; do
    case "$line" in
    "PAGEGEN_ANALYTICS_SCRIPT")
      if [ "$env" = "prod" ]; then
        echo "<meta name=\"google-site-verification\" content=\"h9pxP5_cbPYfxaHUtlg4XGHgB_WR9G2pmapS8qShDSM\" />
<script type=\"text/javascript\">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-9947760-1']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>"
      fi
    ;;
    "PAGEGEN_HEADER_LINKS")
      if [ "$env" = "test" ]; then
        echo '<link rel="stylesheet" href="/include/css/site.css" type="text/css" />
<script async src="/include/javascript/jquery.min.js"></script>
<script async src="/include/javascript/pagegen.js"></script>'
      else
        echo '<link type="text/css" href="/include/css/site.min.css" rel="stylesheet"></link>
<script src="/include/javascript/site.min.js" async=""></script>'
      fi
    ;;
    *)
      echo "$line"
    ;;
    esac
  done < "$master_page_template"
} > "$page_template"


####################################################
# Spell check source files before generation?      #
####################################################

if [ "$env" = "prod" ] || [ "$env" = "stage" ]; then
  echo -e "Spell check? [y|n(DEFAULT)]?"
  read spell_check
  if [ "$spell_check" = "y" ]; then
    find "$content_dir" -type f  \! -executable -exec aspell --dont-backup --lang=en --personal=$aspell_personal_dictionary check {} \;
  fi
fi


####################################################
# Generate site                                    #
####################################################

cd "$env_dir" && PAGEGEN_TARGET_ENVIRONMENT="$env" $pagegen --generate


####################################################
# Robots.txt                                       #
####################################################

if [ "$env" = "stage" ] || [ "$env" = "test" ]; then
  echo -e "User-agent: *\nDisallow: /" > "$site_dir/robots.txt"
fi


####################################################
# Gzip and file rename                             #
####################################################

# Gzip seperate html, css and javascript files, that way can serve both gzip and regular files
# and rename html files with .html
if [ "$env" = "prod" ] || [ "$env" = "stage" ]; then
  
  find "$site_dir" -type f -regex '^[^\.]*$' -exec mv {} {}.html \;

  # Create compressed copies of files that are larger than 1.4Kb
  find "$site_dir" -type f -size +1400c \( -name '*.html' -o -name '*.txt' -o -name '*.css' -o -name '*.js' -o -name '*.json' -o -name '*.rss' \) \
  | sed 's/.*/gzip --best -c "&" > "&.gz"/' \
  | sh
fi


####################################################
# .htaccess                                        #
####################################################

# Prod htaccess has expires set long time, stage not so much
if [ "$env" = "prod" ]; then
  sed 's/^\ *// ; /^#/d ; /^$/d' "$deploy_assets_dir/htaccess" > "$site_dir/.htaccess"
elif [ "$env" = "stage" ]; then
  sed 's/^\ *// ; /^#/d ; /^$/d' "$deploy_assets_dir/htaccess" | sed '/^ExpiresByType/ s/".*/"now"/' > "$site_dir/.htaccess"
fi


####################################################
# 404                                              #
####################################################

# Setup 404 page
pg_404_page="$site_dir/404.html"
source_cgi_404_page="$deploy_assets_dir/404.pl"
cgi_404_page_name="404.pl"
cp "$source_cgi_404_page" "$site_dir/$cgi_404_page_name"
sed -i -e "/^PAGEGEN_404_PAGE_CONTENT$/{r $pg_404_page" -e 'd}' "$site_dir/$cgi_404_page_name"
rm "$pg_404_page"
rm "${pg_404_page}.gz"


####################################################
# Deplpoyment                                      #
####################################################

if [ "$env" = "prod" ] || [ "$env" = "stage" ]; then
  source "$deploy_assets_dir/${env}_ftp.conf"

  chmod_dirs="$(find "$site_dir" -type d | sed "s#^$site_dir#$ftp_target_dir# ; s/^/chmod 755\ /")"
  chmod_files="$(find "$site_dir" -type f | sed "s#^$site_dir#$ftp_target_dir# ; s/^/chmod 644\ /")"

echo "chmod 755 $ftp_cgi_dir/$cgi_404_page_name"

  # NB! TLS at fastline is broken, so need "set ssl:verify-certificate no" in ~/.lftp/rc
  # NB!2 Note that 404.pl tracking page needs moving to cgi-bin and giving appropriate perms
  lftp -f /dev/stdin <<EOFFTP
open $ftp_host
user $ftp_user $ftp_pass
lcd $site_dir
mirror --reverse --exclude statistikk --delete $site_dir $ftp_target_dir
$chmod_dirs
$chmod_files
mv $ftp_target_dir/$cgi_404_page_name $ftp_cgi_dir/$cgi_404_page_name
chmod 755 $ftp_cgi_dir/$cgi_404_page_name
bye
EOFFTP

elif [ "$env" = "test" ]; then
  # Replace js.gz and css.gz extensions
  find "$site_dir" -name '*.html' -type f -exec sed -i 's/\.\(js\|css\)\.gz"/.\1"/g' {} \;
fi


####################################################
# Check links                                      #
####################################################

if [ "$env" = "prod" ] || [ "$env" = "stage" ]; then

  echo -e "Check links [y|n(Default)]?"
  read check_links
  if [ "$check_links" = "y" ]; then
    link_log="/tmp/linkchecker.csv"
    if [ "$env" = "stage" ]; then
      pass="-urice -p "
      url="$stage_url"
    else
      url="$prod_url"
    fi

    linkchecker -ocsv ${pass}$url | sed '/^#/d ; /^mailto:pagegen@phnd.net/d' > "$link_log"
    if [ "$(wc -l "$link_log")" != "1 $link_log" ]; then
      localc "$link_log"
    fi
  fi
fi