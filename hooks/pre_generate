#!/bin/bash

# Keep Analytics script out of test and stage environments
master_page_template="$PAGEGEN_SITE_DIR/templates/master_page.tpl"
page_template="$PAGEGEN_SITE_DIR/templates/page.tpl"

{
  while read line; do
    if [ "$line" = "PAGEGEN_ANALYTICS_SCRIPT" ]; then
      if [ "$PAGEGEN_TARGET_ENVIRONMENT" = "prod" ]; then
        echo "<script type=\"text/javascript\">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-9947760-1']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>"
      fi
    else
      echo "$line"
    fi
  done < "$master_page_template"
} > "$page_template"

echo "Pre hook"
echo "--------"
echo
echo "Todos:" 
echo "* Add goal for downloading in Analytics"
echo "* Executable to generate changelog data in downloads?"
echo "* Page headers: 'Generate after' and 'Generate until' -> generate only if generation date is after or before repectively"
echo "* Run google page speed optimization - Blocking CSS and minify html remaining"
echo "* quick-start.html -> list includes ugly markup from rst, consider subclassing rst to fix"
echo "* Way to specify default header values for pages? E.g. all pages under blog dir should use template X"
echo "* Template values for NEXT_SIBLING_URL and PREV_SIBLING_URL? For first and last then need to handle this nicely so that not end up with a tag with blank href, basically need to replace variable with a tag and href or nothing if SOF or EOF -> How to use pagegen for blog? -> RSS -> categories and tags, post list containing excerpts(guess excerpt should be header value, should also be able to add image to post)"
echo "* TOC over child elements template variable"
echo "* Set html author info in html <meta name="author" content="John Smith">"
echo "* Theme support"
echo "* Add GPLv3 to PG files"
echo "* Explain about pagegen executable file is best way to extend site, keep pg barebones and add stuff using your fav scripting/programming language"
echo "* Only requirement is python"
echo "* Include html4css1.css so rst is basically handled in shipped theme"
echo "* Completely static output is easy to host anywhere"
echo "* Pagegen is geard towards a static site of pages organized in a hiearchy"
echo "* Site search"
echo "* Bundle with hooks to deploy via ftp (sftp, rsync or git are other alternatives)"
echo "* SSI/partials tag to include other files in templates"
echo "* Pagegen can handle regular sites, blogs and documentation sites -> Explain how to setup blog (use dirs for date categorization, and executable for home/category/tag list pages"
echo "* Other tools call page headers for front matter"
grep -R TODO "$PAGEGEN_SOURCE_DIR"/* | sed 's/^/\t* /'
echo